(()=>{var t={379:(t,r,s)=>{const e=s(981);class n{constructor(){this.grid=n.makeGrid()}isEmptyPos(t){if(!n.isValidPos(t))throw new e("Is not valid position!");return null===this.grid[t[0]][t[1]]}isOver(){if(null!=this.winner())return!0;for(let t=0;t<3;t++)for(let r=0;r<3;r++)if(this.isEmptyPos([t,r]))return!1;return!0}placeMark(t,r){if(!this.isEmptyPos(t))throw new e("Is not an empty position!");this.grid[t[0]][t[1]]=r}print(){const t=[];for(let r=0;r<3;r++){const s=[];for(let t=0;t<3;t++)s.push(this.grid[r][t]?this.grid[r][t]:" ");t.push(`${s.join("|")}\n`)}console.log(t.join("-----\n"))}winner(){const t=[[[0,0],[0,1],[0,2]],[[1,0],[1,1],[1,2]],[[2,0],[2,1],[2,2]],[[0,0],[1,0],[2,0]],[[0,1],[1,1],[2,1]],[[0,2],[1,2],[2,2]],[[0,0],[1,1],[2,2]],[[2,0],[1,1],[0,2]]];for(let r=0;r<t.length;r++){const s=this.winnerHelper(t[r]);if(null!=s)return s}return null}winnerHelper(t){for(let r=0;r<n.marks.length;r++){const s=n.marks[r];let e=!0;for(let r=0;r<3;r++){const n=t[r];this.grid[n[0]][n[1]]!=s&&(e=!1)}if(e)return s}return null}static isValidPos(t){return 0<=t[0]&&t[0]<3&&0<=t[1]&&t[1]<3}static makeGrid(){const t=[];for(let r=0;r<3;r++){t.push([]);for(let s=0;s<3;s++)t[r].push(null)}return t}}n.marks=["x","o"],t.exports=n},67:(t,r,s)=>{const e=s(379),n=s(981);t.exports=class{constructor(){this.board=new e,this.currentPlayer=e.marks[0]}isOver(){return this.board.isOver()}playMove(t){this.board.placeMark(t,this.currentPlayer),this.swapTurn()}promptMove(t,r){this.board.print(),console.log(`Current Turn: ${this.currentPlayer}`),t.question("Enter rowIdx: ",(s=>{const e=parseInt(s);t.question("Enter colIdx: ",(t=>{const s=parseInt(t);r([e,s])}))}))}run(t,r){this.promptMove(t,(s=>{try{this.playMove(s)}catch(t){if(!(t instanceof n))throw t;console.log(t.msg)}this.isOver()?(this.board.print(),this.winner()?console.log(`${this.winner()} has won!`):console.log("NO ONE WINS!"),r()):this.run(t,r)}))}swapTurn(){this.currentPlayer===e.marks[0]?this.currentPlayer=e.marks[1]:this.currentPlayer=e.marks[0]}winner(){return this.board.winner()}}},981:t=>{t.exports=function(t){this.msg=t}},489:t=>{t.exports=class{constructor(t,r){this.game=t,this.$el=r,this.setupBoard(),this.bindEvents()}bindEvents(){this.$el.on("click","li",(t=>{const r=$(t.currentTarget);this.makeMove(r)}))}makeMove(t){const r=t.data("pos"),s=this.game.currentPlayer;try{this.game.playMove(r)}catch(t){return void alert("This "+t.msg.toLowerCase())}if(t.addClass(s),this.game.isOver()){this.$el.off("click"),this.$el.addClass("game-over");const t=this.game.winner(),r=$("<figcaption>");t?(this.$el.addClass(`winner-${t}`),r.html(`You win, ${t}!`)):r.html("It's a draw!"),this.$el.append(r)}}setupBoard(){const t=$("<ul>");for(let r=0;r<3;r++)for(let s=0;s<3;s++){let e=$("<li>");e.data("pos",[r,s]),t.append(e)}this.$el.append(t)}}}},r={};function s(e){if(r[e])return r[e].exports;var n=r[e]={exports:{}};return t[e](n,n.exports,s),n.exports}(()=>{const t=s(489),r=s(67);$((()=>{const s=new r;new t(s,$(".ttt"))}))})()})();